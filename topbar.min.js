var topbar=function(s){"use strict";
/*
     * @license MIT
     * topbar 3.0.0
     * http://buunguyen.github.io/topbar
     * Copyright (c) 2024 Buu Nguyen
     */const i={0:"rgba(26,  188, 156, .9)",".25":"rgba(52,  152, 219, .9)",".50":"rgba(241, 196, 15,  .9)",".75":"rgba(230, 126, 34,  .9)","1.0":"rgba(211, 84,  0,   .9)"};class t{container;canvas;progressTimerId=null;autoRun;showing;currentProgress;barThickness;barColors;shadowBlur;shadowColor;className;fadeTimerId=null;delayTimerId=null;constructor({container:s,autoRun:t,barThickness:r,barColors:e,shadowBlur:a,shadowColor:n,className:o}={}){this.container=s||document.body,this.autoRun=t||!0,this.shadowBlur=a||10,this.shadowColor=n||"rgba(0, 0, 0, .6)",this.barThickness=r||3,this.showing=!1,this.currentProgress=0,this.barColors=e||i,this.className=o}show(s){if(!this.showing)if(s){if(this.delayTimerId)return;this.delayTimerId=window.setTimeout((()=>this.show()),s)}else this.showing=!0,null!==this.fadeTimerId&&window.cancelAnimationFrame(this.fadeTimerId),this.canvas||this.createCanvas(),this.canvas.parentElement||this.container.appendChild(this.canvas),this.canvas.style.opacity="1",this.canvas.style.display="block",this.progress(0),this.autoRun&&this.loopShow()}hide(){clearTimeout(this.delayTimerId),this.delayTimerId=null,this.showing&&(this.showing=!1,null!=this.progressTimerId&&(window.cancelAnimationFrame(this.progressTimerId),this.progressTimerId=null),this.hideLoop())}progress(s){if(void 0===s)return this.currentProgress;if("string"==typeof s){const i=s.indexOf("+")>=0||s.indexOf("-")>=0;s=(i?this.currentProgress:0)+parseFloat(s)}return this.currentProgress=s>1?1:s,this.repaint(),this.currentProgress}hideLoop(){if(this.progress("+.1")>=1&&this.canvas){const s=parseFloat(this.canvas.style.opacity)-.05;if(this.canvas.style.opacity=s.toString(),parseFloat(this.canvas.style.opacity)<=.05)return this.canvas.style.display="none",void(this.fadeTimerId=null)}this.fadeTimerId=window.requestAnimationFrame(this.hideLoop.bind(this))}loopShow(){this.progressTimerId=window.requestAnimationFrame(this.loopShow.bind(this)),this.progress("+"+.05*Math.pow(1-Math.sqrt(this.currentProgress),2))}createCanvas(){this.canvas=document.createElement("canvas");const s=this.canvas.style;s.position="fixed",s.top="0",s.left="0",s.right="0",s.margin="0",s.padding="0",s.zIndex="100001",s.display="none",this.className&&this.canvas.classList.add(this.className),window.addEventListener("resize",this.repaint,!1)}repaint(){if(!this.canvas)return;this.canvas.width=window.innerWidth,this.canvas.height=5*this.barThickness;const s=this.canvas.getContext("2d");if(!s)return;s.shadowBlur=this.shadowBlur,s.shadowColor=this.shadowColor;const i=s.createLinearGradient(0,0,this.canvas.width,0);for(const s in this.barColors)i.addColorStop(parseFloat(s),this.barColors[s]);s.lineWidth=this.barThickness,s.beginPath(),s.moveTo(0,this.barThickness/2),s.lineTo(Math.ceil(this.currentProgress*this.canvas.width),this.barThickness/2),s.strokeStyle=i,s.stroke()}}let r;return s.Topbar=t,s.config=function(s){return r=new t(s),r},s.hide=function(){r||(r=new t),r.hide()},s.progress=function(s){return r||(r=new t),r.progress(s)},s.show=function(s){r||(r=new t),r.show(s)},s}({});
